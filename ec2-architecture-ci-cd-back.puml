@startuml "AWS Architecture Diagram"

title "Shortly Architecture - DevOps CI/CD Back"

left to right direction

!define AWSPUML https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v15.0/dist

!include AWSPUML/AWSCommon.puml
!include AWSPUML/General/User.puml
!include AWSPUML/General/Users.puml
!include AWSPUML/General/Internet.puml
!include AWSPUML/Groups/Region.puml
!include AWSPUML/Groups/AWSCloud.puml
!include AWSPUML/DeveloperTools/CodeStar.puml
!include AWSPUML/DeveloperTools/CodeBuild.puml
!include AWSPUML/DeveloperTools/CodeDeploy.puml
!include AWSPUML/DeveloperTools/CodePipeline.puml

!include AWSPUML/Database/RDS.puml
!include AWSPUML/Groups/VPC.puml
!include AWSPUML/Groups/Region.puml
!include AWSPUML/Groups/AWSCloud.puml
!include AWSPUML/Groups/SecurityGroup.puml
!include AWSPUML/Groups/PublicSubnet.puml
!include AWSPUML/Groups/PrivateSubnet.puml
!include AWSPUML/Groups/AvailabilityZone.puml
!include AWSPUML/Compute/EC2T3Instance.puml
!include AWSPUML/Storage/SimpleStorageService.puml
!include AWSPUML/ManagementGovernance/CloudWatch.puml
!include AWSPUML/ApplicationIntegration/APIGateway.puml
!include AWSPUML/NetworkingContentDelivery/Route53.puml
!include AWSPUML/NetworkingContentDelivery/VPCRouter.puml
!include AWSPUML/NetworkingContentDelivery/CloudFront.puml
!include AWSPUML/NetworkingContentDelivery/VPCInternetGateway.puml
!include AWSPUML/SecurityIdentityCompliance/CertificateManager.puml

!define CodePipelineGroup(g_alias, g_label="AWS CodePipeline") AWSGroupEntity(g_alias, g_label, AWS_COLOR_BLUE, CodePipeline, CodePipelineGroup)

AWSGroupColoring(CodePipelineGroup, #FFFFFF, AWS_COLOR_BLUE, plain)

User(MyDeveloper, "Engenheiro", "Desensolvedor que está constantemente mantendo o sistema")

AWSCloudGroup(cloud) {
  RegionGroup(region) {

    CodePipelineGroup(pipelineBack, "AWS CodePipeline Backend"){
      CodeStar(MyCodeStarBack, "GitHub", "Integração com o GitHub")
      SimpleStorageService(MyS3CodePipelineBackSource, "Artefatos de Código-fonte", "Repositório dos artefatos do CodePipeline")
      CodeBuild(MyCodeBuildBack, "Builder", "Constrói a aplicação backend e gera a bundle final")
      SimpleStorageService(MyS3CodePipelineBackBuild, "Artefatos de Build", "Repositório dos artefatos do CodePipeline")
      CodeDeploy(MyCodeDeployBack, "Deploy", "Implanta a aplicação na instância EC2")
      SimpleStorageService(MyS3CodePipelineBackDeploy, "Artefatos de Deploy/Bundle", "Repositório dos artefatos do CodePipeline")
    }

    EC2T3Instance(MyEC2, "Virtual Machine", "Máquina EC2 T3 Micro / Ubuntu")
  }
}

MyDeveloper --> MyCodeStarBack : Push changes

MyCodeStarBack --> MyS3CodePipelineBackSource : Write source code
MyS3CodePipelineBackSource <-- MyCodeBuildBack : Fetch source code
MyCodeBuildBack -left-> MyS3CodePipelineBackBuild : Write build
MyS3CodePipelineBackBuild <-up- MyCodeDeployBack : Fetch build
MyCodeDeployBack -up-> MyS3CodePipelineBackDeploy : Write deploy artifacts
MyEC2 -left-> MyS3CodePipelineBackDeploy : Fetch last stable release to deployment
MyCodeDeployBack -right-> MyEC2 : Send a signal using SQS to CodeDeploy Agent

@enduml
